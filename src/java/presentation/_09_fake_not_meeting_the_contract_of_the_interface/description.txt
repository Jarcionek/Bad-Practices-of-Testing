//TODO Jarek: move code to Java files

fake not meeting the contract of interface (behaves different from real)

Production code:

public interface UuidProvider {

    /**
     * Returns new universally unique identifier. It is guaranteed that returned value
    * is different than last 1000 previously returned values.
    */
    String next();

}

Test code:

public class UuidProviderStub implements UuidProvider {

    @Override
    public String next() {
        return "12345";
    }

}

public class EventsReceiverTest {

    ...

    private EventsReceiver eventsReceived = new EventsReceiver(new UuidProviderStub());

    @Test
    public void reportsEventsWithDifferentUuids() {
        eventsReceiver.process(eventOne, eventTwo);

        verify(reporter, times(1)).report(eventOne, "12345");
        verify(reporter, times(1)).report(eventTwo, "12345");
    }

}

Problem:

Although the name of the test clearly says what it is supposed to test, it doesnâ€™t test it at all. UuidProviderStub does not meet the contract of the interface it implements, it behaves differently than the real UuidProvider behaves. The minimal implementation to make this test pass is to get only one UUID and report all events against this single value.

Solution:

If you create stub or fake, make sure that it behaves like a real implementation.
